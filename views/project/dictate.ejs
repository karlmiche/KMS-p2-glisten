<div class="container">
    <h2>browser speech recognition</h2>
    <p>Feel free to talk into the microphone for as long as you like! You can save your transcription 
        to "my transcriptions" if you'd like to do so.
    </p>
</div>
<div class="container">
    <main>
        <button class="btn" id="startBtn">Start Listening</button>
        <div id="result"></div>
        <p id="message" hidden aria-hidden="true">
          Your browser does not support speech recognition at this moment.
        </p>
      </main>
</div>

<script>
    window.addEventListener("DOMContentLoaded", () => {
      const button = document.getElementById("startBtn");
      const result = document.getElementById("result");
      const main = document.getElementsByTagName("main")[0];
      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition
      if (typeof SpeechRecognition === "undefined") {
        button.remove();
        const message = document.getElementById("message");
        message.removeAttribute("hidden");
        message.setAttribute("aria-hidden", "false");
      } else {
        let listening = false;
        const recognition = new SpeechRecognition();
        const start = () => {
            recognition.start();
            button.textContent = "Stop recording";
            main.classList.add("recording");
        };
        const stop = () => {
            recognition.stop();
            button.textContent = "Start recording";
            main.classList.remove("speaking");
        };
        const onResult = event => {
            result.innerHTML = "";
            for (const res of event.results) {
                const text = document.createTextNode(res[0].transcript);
                const p = document.createElement("p");
                if (res.isFinal) {
                    p.classList.add("final");
                }
                p.appendChild(text);
                result.appendChild(p);
            }
        } 
        recognition.continuous = true;
        recognition.interimResults = true;
        recognition.addEventListener("result", onResult);

        button.addEventListener("click", () => {
            listening ? stop() : start();
            listening = !listening;
        })
    }
    });

    //whenever axios is called, sometime after entire page loads
    //no immediate axios calls since it isn't loaded yet
    //
    </script>